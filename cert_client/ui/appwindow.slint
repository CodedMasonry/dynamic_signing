import { Button, VerticalBox, Palette } from "std-widgets.slint";

export enum MenuOptions { home, servers, settings}

export global WindowSettings {
    in-out property <MenuOptions> activeMenu;
}

component Icon inherits Image {
    in property <MenuOptions> menu;
    width: 36px;
    height: 36px;
    colorize: Palette.alternate-foreground;

    animate colorize {
         duration: 100ms;
         easing: ease-in-out;
    }

    touch := TouchArea {
        clicked => {
            WindowSettings.activeMenu = menu;
        }
    }

    states [
        active when WindowSettings.activeMenu == menu: {
            root.colorize: Palette.accent-background;
        }
        active-hover when touch.has-hover: {
            root.colorize: Palette.accent-foreground;
        }
    ]
    // Add tooltips
}

component sideBar inherits Rectangle {
    width: 48px;
    background: Palette.alternate-background;

    // Top Bottoms
    VerticalLayout {
        padding: 5px;
        spacing: 10px;
        alignment: start;
        
        Icon {
            menu: MenuOptions.home;
            source: @image-url("icons/home.svg");
        }

        Icon {
            menu: MenuOptions.servers;
            source: @image-url("icons/server.svg");
        }
    }
    // Bottom buttons
    VerticalLayout {
        padding: 5px;
        spacing: 10px;
        alignment: end;

        Icon {
            menu: MenuOptions.settings;
            source: @image-url("icons/settings.svg");
        }
    }
}

component menu inherits VerticalLayout {
    padding: 5px;
    spacing: 10px;
    alignment: start;

}

component home inherits menu {
    Button {
        text: "home";
    }
}
component servers inherits menu {
    Button {
        text: "servers";
    }
}
component settings inherits menu {
    Button {
        text: "settings";
    }
}

export component AppWindow inherits Window {
    in-out property <MenuOptions> currentMenu;
    min-width: 900px;
    min-height: 600px;
    icon: @image-url("icons/cert.svg");
    title: "Certificate Client";
    HorizontalLayout {
        sideBar { }
        Rectangle {
            width: 1px;
            background: Palette.border;
            drop-shadow-blur: 5px;
        }
        if WindowSettings.activeMenu == MenuOptions.home : home {}
        if WindowSettings.activeMenu == MenuOptions.servers : servers {}
        if WindowSettings.activeMenu == MenuOptions.settings : settings {}
    }
}
